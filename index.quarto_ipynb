{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Natural convection for CHT\"\n",
        "author: \"Ali ASAD\"\n",
        "date: today\n",
        "---\n",
        "\n",
        "## Problem Setup and Model\n",
        "Natural convection in a differentially heated cavity with $\\boldsymbol{u}$, $p$, and $T$ being the vector velocity field, pressure and temperature scalar fields, respectively."
      ],
      "id": "acb5d347"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Create a figure and axis\n",
        "fig, ax = plt.subplots(figsize=(4,4), dpi=100)\n",
        "# fig.set_dpi(300)\n",
        "\n",
        "# Draw the square (unit box from (0,0) to (1,1))\n",
        "square = plt.Rectangle((0, 0), 1, 1, fill=None, edgecolor='black', linewidth=2)\n",
        "ax.add_patch(square)\n",
        "\n",
        "# Add labels\n",
        "ax.text(0.07, 0.5, 'Hot', va='center', ha='right', fontsize=12, rotation=90)         # Left\n",
        "ax.text(0.995, 0.5, 'Cold', va='center', ha='right', fontsize=12, rotation=90)         # Left\n",
        "ax.text(-0.05, 0.5, r'$T=1, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$', va='center', ha='right', fontsize=12, rotation=90)         # Left\n",
        "ax.text(0.5, 1.03, r'$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}}=0, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$', va='bottom', ha='center', fontsize=12)                     # Top\n",
        "ax.text(1.05, 0.5, r'$T=0, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$', va='center', ha='left', fontsize=12, rotation=90)           # Right\n",
        "ax.text(0.5, 0.5, r'$\\boldsymbol{\\longleftarrow}$', va='center', ha='left', fontsize=12, rotation=90)           \n",
        "ax.text(0.54, 0.51, r'$\\boldsymbol{g}$', va='center', ha='left', fontsize=12, rotation=0)           \n",
        "ax.text(0.5, -0.03, r\"$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}}=0, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$\", va='top', ha='center', fontsize=12)                       # Bottom\n",
        "\n",
        "# Set limits and aspect\n",
        "ax.set_xlim(-0.2, 1.2)\n",
        "ax.set_ylim(-0.2, 1.2)\n",
        "ax.set_aspect('equal')\n",
        "ax.axis('off')  # Turn off axes\n",
        "\n",
        "# Show the plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "15f9a844",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Following [@xin2006natural], we have the nondimensional form of the governing equations for natural convection in cavities with adiabatic horizontal walls. \n",
        "$$\n",
        "\\begin{aligned}\n",
        "    &\\partial_t \\boldsymbol{u} + \\boldsymbol{u} \\cdot \\boldsymbol{\\nabla}\\boldsymbol{u} + {\\rm Pr} \\boldsymbol{\\nabla} p + \\frac{{\\rm Pr}}{\\sqrt{\\mathrm{ Ra}}} \\boldsymbol{\\Delta} \\boldsymbol{u} -  {\\rm Pr} T \\mathbf{\\hat{e}}_y &= 0 \\\\\n",
        "    &\\boldsymbol{\\nabla} \\cdot \\boldsymbol{u} &= 0, \\\\\n",
        "    &\\partial_t T + \\boldsymbol{u}\\cdot \\boldsymbol{\\nabla} T + \\frac{1}{\\sqrt{\\mathrm{ Ra}}} \\boldsymbol{\\Delta} T &= 0,\n",
        "\\end{aligned}\n",
        "$$\n",
        "$\\quad \\boldsymbol{\\cdot}$  Rayleigh (${\\rm Ra}$) and Prandtl (${\\rm Pr}$) numbers are dimensionless constants,  \n",
        "$\\quad \\boldsymbol{\\cdot}$  $\\mathbf{\\hat{e}}_y$ is the normal vector for gravity in negative y-direction\n",
        "\n",
        "---\n",
        "\n",
        "## Numerical Implementation\n",
        "\n",
        "For both fluid and temperature fields:\n",
        "\n",
        "- **Diffusion**, **Divergence** and **Gradient** operators are solved <span style=\"color: blue;\">*implicitly*</span> (*linear solver*). \n",
        "- **Convection**$\\ \\!^{\\boldsymbol{\\star}}$ terms and **Buoyancy forcing** are added <span style=\"color: green;\">*explicitly*</span> as source terms. \n",
        "\n",
        "$$\n",
        "\\color{blue}{\n",
        "\\begin{bmatrix}\n",
        "    I + \\Delta t \\frac{{\\rm Pr}}{\\sqrt{\\mathrm{ Ra}}}  \\boldsymbol{\\Delta} & \\Delta t\\;  {\\rm Pr}\\; \\boldsymbol{\\nabla} & 0 \\\\\n",
        "    -\\boldsymbol{\\nabla} & 0 & 0 \\\\\n",
        "    0 & 0 & I + \\Delta t  \\frac{1}{\\sqrt{\\mathrm{ Ra}}} \\boldsymbol{\\Delta} \n",
        "\\end{bmatrix}\n",
        "}\n",
        "\\begin{bmatrix}\n",
        "    \\boldsymbol{u}^{n+1} \\\\\n",
        "    p^{n+1} \\\\\n",
        "    T^{n+1}\n",
        "\\end{bmatrix}\n",
        "=\n",
        "\\color{green}{\n",
        "\\begin{bmatrix}\n",
        "    \\boldsymbol{u}^{n} - \\Delta t \\cdot \\text{conv}(\\boldsymbol{u}^{n}) + {\\rm Pr}\\; T^{n}\\; \\hat{\\mathbf{e}}_y \\\\\n",
        "    0 \\\\\n",
        "    T^{n} - \\Delta t \\cdot \\text{conv}(T^{n})\n",
        "\\end{bmatrix}}\n",
        "$$\n",
        "\n",
        "$$\n",
        "\\color{blue}{A} x = \\color{green}{b}\n",
        "$$\n",
        "\n",
        "\n",
        "```cpp\n",
        "auto natural_convection = samurai::make_block_operator<3, 3>(\n",
        "                                    id_vel + dt * diff_vel,    dt * Pr * grad_p,                  zero_temp,\n",
        "                                                  -div_vel,              zero_p,                     zero_p,\n",
        "                                                  zero_vel,              zero_p,    id_temp + dt * diff_temp\n",
        "                            );\n",
        "\n",
        "```\n",
        "```cpp\n",
        "auto natural_convection_solver = samurai::petsc::make_solver<true>(natural_convection);\n",
        "natural_convection_solver.set_unknowns(velocity_np1, pressure_np1, temperature_np1);\n",
        "configure_direct_solver(natural_convection_solver);\n",
        "```\n",
        "Inside time loop\n",
        "```cpp\n",
        "// rhs\n",
        "rhs_vel = velocity - dt * conv_vel(velocity);\n",
        "samurai::for_each_cell(mesh[mesh_id_t::cells], [&]( auto& cell )\n",
        "{\n",
        "    rhs_vel[cell][1] += -Pr * temperature[cell]; // Gravity term in -ve y-direction\n",
        "    if (cell.corner(0) == 0. && cell.corner(1) == 0.)\n",
        "    {\n",
        "        // std::cout << \"Setting reference pressure in cell with origin coords\" << std::endl;\n",
        "        pressure_np1[cell] = 0.; // Set reference pressure for unique solution\n",
        "    }\n",
        "});\n",
        "rhs_temp = temperature - dt * conv_temp(temperature);\n",
        "\n",
        "// Solve the system\n",
        "natural_convection_solver.solve(rhs_vel, rhs_p, rhs_temp);\n",
        "```\n",
        "\n",
        "---\n",
        "\n",
        "## $\\!^{\\boldsymbol{\\star}}\\!\\!$ Convection operators\n",
        "- Linear convection of scalar with fixed velocity\n",
        "\n",
        "<span style=\"font-size: 90%;\">*Definition*</span> \n",
        "```cpp \n",
        "auto conv_temp  = samurai::make_convection_upwind<TemperatureField>(velocity);\n",
        "```\n",
        "<span style=\"font-size: 90%;\">*Call*</span> \n",
        "```cpp\n",
        "conv_temp(temperature);\n",
        "```\n",
        "<span style=\"font-size: 90%;\">*Implements*</span> \n",
        "\n",
        "$\\boldsymbol{u}_{\\rm {\\scriptsize upwind}} \\cdot \\boldsymbol{\\nabla}$\n",
        "\n",
        "- Nonlinear convection of velocity vector\n",
        "\n",
        "<span style=\"font-size: 90%;\">*Definition*</span> \n",
        "```cpp\n",
        "auto conv_vel   = samurai::make_convection_upwind<VelocityField>();\n",
        "```\n",
        "<span style=\"font-size: 90%;\">*Call*</span> \n",
        "```cpp\n",
        "conv_vel(velocity);\n",
        "```\n",
        "<span style=\"font-size: 90%;\">*Implements*</span>  \n",
        "\n",
        "$\\boldsymbol{u}_{\\rm {\\scriptsize upwind}} \\otimes \\boldsymbol{u}$ \n",
        "$\\quad$ <span style=\"font-size: 85%;\">⚠️ $\\ $ It works for incompressible fluid as we explicitly solve for $\\nabla \\cdot \\boldsymbol{u} = 0$ (??).</span> \n",
        "\n",
        "---\n",
        "\n",
        "## Result: Natural Convection (standalone)\n",
        "<!-- <span style=\"font-size: 90%;\"> \n",
        "Parameters</span> -->\n",
        "- <span style=\"font-size: 85%;\">${\\rm Ra} = 1{\\rm E+}2$, ${\\rm Pr} = 1$, $T_f = 5$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell = [6, 4]$, $\\epsilon_{\\rm MR} = 2{\\rm E-4}$, $MR_{\\rm regularity} = 1$</span>\n",
        "\n",
        "![](figs/nat_conv_Ra1e+02.gif){height=400px}\n",
        "\n",
        "<span style=\"font-size: 90%;\">Remarks</span>\n",
        "\n",
        "-  <span style=\"font-size: 90%;\">AMR is not well utilised</span>\n",
        "-  <span style=\"font-size: 90%;\">Ra $>$ 1E+3 : code diverges (explicit buoyancy forcing?, explicit nonlinear terms, finer mesh ?) </span> \n",
        "\n",
        "---\n",
        "\n",
        "## Result: Natural Convection (standalone)\n",
        "<!-- <span style=\"font-size: 90%;\"> \n",
        "Parameters</span> -->\n",
        "- <span style=\"font-size: 85%;\">${\\rm Ra} = 1{\\rm E+}3$, ${\\rm Pr} = 1$, $T_f = 2$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell = [6, 4]$, $\\epsilon_{\\rm MR} = 2{\\rm E-4}$, $MR_{\\rm regularity} = 1$</span>\n",
        "\n",
        "![](figs/nat_conv_Ra1e+03.gif){height=400px}\n",
        "\n",
        "<!-- <span style=\"font-size: 90%;\">Remarks</span>\n",
        "\n",
        "-  <span style=\"font-size: 90%;\">AMR is not well utilised</span>\n",
        "-  <span style=\"font-size: 90%;\">Ra $>$ 1E+3 : code diverges (explicit buoyancy forcing?, explicit nonlinear terms, finer mesh ?) </span>  -->\n",
        "\n",
        "---\n",
        "\n",
        "## Solid-Fluid CHT with Natural Convection : The setup\n",
        "\n",
        "\\\n",
        "\n",
        "<p align=\"left\", style=\"color: red;\"><strong>Dirichlet-Neumann coupling</strong></p>\n",
        "where, $\\lambda$ = ratio of thermal conductivities of fluid ($=1/\\sqrt{{\\rm Ra}}$) to solid.\n",
        "\n",
        "\\\n",
        "\\\n",
        "\n",
        "<!-- ```{python .hide-code} -->"
      ],
      "id": "a663e1e5"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: false\n",
        "import matplotlib.pyplot as plt\n",
        "# Create a figure and axis\n",
        "fig, ax = plt.subplots(figsize=(8,8), dpi=100)\n",
        "fig.patch.set_alpha(0)    # Transparent figure background\n",
        "ax.patch.set_alpha(0)\n",
        "# fig.set_dpi(300)\n",
        "\n",
        "# Draw the square (unit box from (0,0) to (1,1))\n",
        "ll = -1.35\n",
        "square_l = plt.Rectangle((ll, 0), 1, 1, fill=None, edgecolor='black', linewidth=2)\n",
        "square = plt.Rectangle((0, 0), 1, 1, fill=None, edgecolor='black', linewidth=2)\n",
        "ax.add_patch(square_l)\n",
        "ax.add_patch(square)\n",
        "\n",
        "\n",
        "# Add labels\n",
        "ax.text(0.6, 0.7, 'FLUID', va='center', ha='right', fontsize=12, rotation=0)\n",
        "\n",
        "ax.text(0.6 + ll, 0.7, 'SOLID', va='center', ha='right', fontsize=12, rotation=0)         \n",
        "\n",
        "ax.text(-0.05, 0.1, r'$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}} = \\lambda \\boldsymbol{\\nabla} T_{\\mathrm{solid}} \\cdot \\hat{\\boldsymbol{n}}$', va='center', ha='right', fontsize=12, rotation=90, color='red')         \n",
        "ax.text(-0.05, 0.7, r'$,\\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$', va='center', ha='right', fontsize=12, rotation=90)         \n",
        "ax.text(0.5, 1.03, r'$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}}=0, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$', va='bottom', ha='center', fontsize=12)                    \n",
        "ax.text(1.05, 0.5, r'$T=0, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$', va='center', ha='left', fontsize=12, rotation=90)          \n",
        "ax.text(0.5, 0.5, r'$\\boldsymbol{\\longleftarrow}$', va='center', ha='left', fontsize=12, rotation=90)           \n",
        "ax.text(0.54, 0.51, r'$\\boldsymbol{g}$', va='center', ha='left', fontsize=12, rotation=0)           \n",
        "ax.text(0.5, -0.03, r\"$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}}=0, \\quad \\boldsymbol{u}=0, \\quad \\boldsymbol{\\nabla} p \\cdot \\hat{\\boldsymbol{n}}=0$\", va='top', ha='center', fontsize=12)   \n",
        "\n",
        "ax.text(-0.05 + ll, 0.5, r'$T = 1$', va='center', ha='right', fontsize=12, rotation=90)\n",
        "ax.text(0.5 + ll, 1.03, r'$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}}=0$', va='bottom', ha='center', fontsize=12)\n",
        "ax.text(1.05 + ll, 0.5, r'$T=T_{\\mathrm{fluid}}$', va='center', ha='left', fontsize=12, rotation=90, color='red')\n",
        "ax.text(0.5 + ll, -0.03, r\"$\\boldsymbol{\\nabla} T \\cdot \\hat{\\boldsymbol{n}}=0$\", va='top', ha='center', fontsize=12)   \n",
        "\n",
        "# Set limits and aspect\n",
        "ax.set_xlim(-1.7, 1.2)\n",
        "ax.set_ylim(-1.7, 1.2)\n",
        "ax.set_aspect('equal')\n",
        "ax.axis('off')  # Turn off axes\n",
        "\n",
        "# fig.patch.set_alpha(0)    # Transparent figure background\n",
        "# ax.patch.set_alpha(0)\n",
        "\n",
        "\n",
        "# Show the plot\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "bad9ad51",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "\n",
        "## Solid-Fluid CHT with Natural Convection: A first result \n",
        "\n",
        "**(`SAMURAI` + `PETSc` + <span style=\"color: red; font-family: monospace;\">CWIPI</span>)**\n",
        "\n",
        "- <span style=\"font-size: 85%;\">$T_{\\rm hot} = 1$, $\\lambda = 1$, ${\\rm Ra} = 1{\\rm E+}2$, ${\\rm Pr} = 1$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell_{\\rm left} = 4$, $\\ell_{\\rm right} = 5$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\Delta t_{\\rm coupling} = 0.1$, $T_f = 40$</span>\n",
        "\n",
        "![](figs/cht_temp_isosurface.gif){height=400px}\n",
        "\n",
        "<span style=\"font-size: 90%;\">Remarks</span>\n",
        "\n",
        "-  <span style=\"font-size: 90%;\">AMR not implemented</span>\n",
        "-  <span style=\"font-size: 90%;\">First-order BE: slower (probably inefficient implimentation) than ponio </span> \n",
        "-  <span style=\"font-size: 90%;\">Ponio: solver implementation with PETSc state vector created by block assembly (possible solution found with JM, not implemented) </span> \n",
        "\n",
        "---\n",
        "\n",
        "## Solid-Fluid CHT with Natural Convection: Study 1 (*base*)\n",
        "\n",
        "- <span style=\"font-size: 85%;\">$T_{\\rm hot} = 1$, $\\lambda = 2$, ${\\rm Ra} = 1{\\rm E+}2$, ${\\rm Pr} = 1$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell_{\\rm left} = 4$, $\\ell_{\\rm right} = 5$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\Delta t_{\\rm coupling} = 0.1$, $T_f = 40$</span>\n",
        "```{shell}\n",
        "mpirun -n 2 tests/cht_solid_fluid_cwipi_samurai -t1 40 -dt 0.1 -T_hot 1 -lambda 2 -Ra 100 -visu_freq 10 -export_velocity\n",
        "```\n",
        "\n",
        "<div style=\"display: flex; flex-direction: column; gap: -50px;\">\n",
        "  <img src=\"figs/cht_solid_fluid_temp_Thot1_lambda2_Ra1E+02_tf40_dt1E-01.gif\" height=\"300\">\n",
        "  <img src=\"figs/cht_fluid_velocity_Thot1_lambda2_Ra1E+02_tf40_dt1E-01.gif\" height=\"300\" style=\"margin-top: -60px; margin-left: 425px;\">\n",
        "</div>\n",
        "\n",
        "---\n",
        "\n",
        "## Solid-Fluid CHT with Natural Convection: Study 2 ($\\lambda$)\n",
        "\n",
        "- <span style=\"font-size: 85%;\">$T_{\\rm hot} = 1$, $\\lambda = 4$, ${\\rm Ra} = 1{\\rm E+}2$, ${\\rm Pr} = 1$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell_{\\rm left} = 4$, $\\ell_{\\rm right} = 5$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\Delta t_{\\rm coupling} = 0.1$, $T_f = 40$</span>\n",
        "```{shell}\n",
        "mpirun -n 2 tests/cht_solid_fluid_cwipi_samurai -t1 40 -dt 0.1 -T_hot 1 -lambda 4 -Ra 100 -visu_freq 10 -export_velocity\n",
        "```\n",
        "\n",
        "<div style=\"display: flex; flex-direction: column; gap: -50px;\">\n",
        "  <img src=\"figs/cht_solid_fluid_temp_Thot1_lambda4_Ra1E+02_tf40_dt1E-01.gif\" height=\"300\">\n",
        "  <img src=\"figs/cht_fluid_velocity_Thot1_lambda4_Ra1E+02_tf40_dt1E-01.gif\" height=\"300\" style=\"margin-top: -60px; margin-left: 425px;\">\n",
        "</div>\n",
        "\n",
        "---\n",
        "\n",
        "## Solid-Fluid CHT with Natural Convection: Study 3 (Ra)\n",
        "\n",
        "- <span style=\"font-size: 85%;\">$T_{\\rm hot} = 1$, $\\lambda = 4$, ${\\rm Ra} = 1{\\rm E+}3$, ${\\rm Pr} = 1$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell_{\\rm left} = 4$, $\\ell_{\\rm right} = 5$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\Delta t_{\\rm coupling} = 0.1$, $T_f = 40$</span>\n",
        "\n",
        "```{shell}\n",
        "mpirun -n 2 tests/cht_solid_fluid_cwipi_samurai -t1 40 -dt 0.1 -T_hot 1 -lambda 4 -Ra 1000 -visu_freq 10 -export_velocity\n",
        "```\n",
        "\n",
        "<div style=\"display: flex; flex-direction: column; gap: -50px;\">\n",
        "  <img src=\"figs/cht_solid_fluid_temp_Thot1_lambda4_Ra1E+03_tf40_dt1E-01.gif\" height=\"300\">\n",
        "  <img src=\"figs/cht_fluid_velocity_Thot1_lambda4_Ra1E+03_tf40_dt1E-01.gif\" height=\"300\" style=\"margin-top: -60px; margin-left: 425px;\">\n",
        "</div>\n",
        "\n",
        "---\n",
        "\n",
        "## Solid-Fluid CHT with Natural Convection: Study 4 ($T_{\\rm hot}$)\n",
        "\n",
        "- <span style=\"font-size: 85%;\">$T_{\\rm hot} = 2$, $\\lambda = 4$, ${\\rm Ra} = 1{\\rm E+}3$, ${\\rm Pr} = 1$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\ell_{\\rm left} = 4$, $\\ell_{\\rm right} = 5$</span>\n",
        "- <span style=\"font-size: 85%;\">$\\Delta t_{\\rm coupling} = 0.1$, $T_f = 40$</span>\n",
        "\n",
        "```{shell}\n",
        "mpirun -n 2 tests/cht_solid_fluid_cwipi_samurai -t1 40 -dt 0.1 -T_hot 2 -lambda 4 -Ra 1000 -visu_freq 10 -export_velocity\n",
        "```\n",
        "\n",
        "<div style=\"display: flex; flex-direction: column; gap: -50px;\">\n",
        "  <img src=\"figs/cht_solid_fluid_temp_Thot2_lambda4_Ra1E+03_tf40_dt1E-01.gif\" height=\"300\">\n",
        "  <img src=\"figs/cht_fluid_velocity_Thot2_lambda4_Ra1E+03_tf40_dt1E-01.gif\" height=\"300\" style=\"margin-top: -60px; margin-left: 425px;\">\n",
        "</div>\n",
        "---\n",
        "\n",
        "## References\n",
        "::: {#refs}\n",
        ":::"
      ],
      "id": "279312e4"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/aliasad/mambaforge/envs/jupyter-samurai-env/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}